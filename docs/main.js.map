{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/http.service.ts","./src/app/pages/cards/cards.component.ts","./src/app/pages/cards/cards.component.html","./src/app/components/activity-indicator/activity-indicator.component.ts","./src/app/components/activity-indicator/activity-indicator.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/card/card.component.ts","./src/app/pages/card/card.component.html","./src/app/pipes/sort-by.pipe.ts","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpRequest } from '@angular/common/http';\nimport { CardsModel } from '../models/card-model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpService {\n  constructor(public http: HttpClient) {}\n\n  public getCards(params: object): Observable<CardsModel> {\n    let url = `https://api.pokemontcg.io/v1/cards?`;\n    if (params) {\n      Object.keys(params).forEach((key: string) => {\n        url = `${url}${key}=${params[key]}&`\n      });\n    }\n    return this.http.get<CardsModel>(url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CardsModel, CardModel } from 'src/app/models/card-model';\nimport { debounceTime, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-cards',\n  templateUrl: './cards.component.html',\n  styleUrls: ['./cards.component.scss'],\n})\nexport class CardsComponent implements OnInit {\n  public cards: CardModel[] = [];\n  public searchChanged: Subject<string> = new Subject<string>();\n  public filter = {\n    name: '',\n    page: 1,\n    pageSize: 100\n  }\n  public loading: boolean = false;\n  constructor(private httpService: HttpService) {}\n\n  public onChangeSearch(event: any) {\n    this.searchChanged.next(event.target.value);\n  }\n\n  public getCards(searchName: string) {\n    this.filter.name = searchName;\n    this.loading = true;\n    this.httpService.getCards(this.filter)\n      .subscribe((response: CardsModel) => {\n        this.cards = response.cards;\n        console.log(this.cards);\n        \n        this.loading = false;\n      });\n  }\n\n  ngOnInit(): void {\n    this.searchChanged\n      .pipe(debounceTime(1000), distinctUntilChanged())\n      .subscribe((searchName: string) => {\n        this.getCards(searchName);\n      });\n    this.getCards('');\n  }\n}\n","<div>\n  <h1 class=\"title\">Cards Pokemon</h1>\n  <app-activity-indicator *ngIf=\"loading\"></app-activity-indicator>\n  <div class=\"container\">\n    <input type=\"text\" (keyup)=\"onChangeSearch($event)\" placeholder=\"Search by card name\" class=\"input-search\"/>\n  </div>\n  <div class=\"container\">\n    <div class=\"info\" *ngIf=\"cards.length === 0 && !loading\">Not a card with that name was found!</div>\n  </div>\n  <div class=\"container\">\n    <div class=\"card\" *ngFor=\"let card of cards | sortBy: 'name'; index as i\">\n      <a [routerLink]=\"['/card', card.id]\">\n        <img [src]=\"card.imageUrl\" />\n      </a>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-activity-indicator',\n  templateUrl: './activity-indicator.component.html',\n  styleUrls: ['./activity-indicator.component.scss']\n})\nexport class ActivityIndicatorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"lds-hourglass\"></div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app-pokemon';\n}\n","<div>\n    <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CardsComponent } from './pages/cards/cards.component';\nimport { CardComponent } from './pages/card/card.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { SortByPipe } from './pipes/sort-by.pipe';\nimport { ActivityIndicatorComponent } from './components/activity-indicator/activity-indicator.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CardsComponent,\n    CardComponent,\n    NotFoundComponent,\n    SortByPipe,\n    ActivityIndicatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CardModel, CardsModel } from 'src/app/models/card-model';\nimport { HttpService } from 'src/app/services/http.service';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  public card: Partial<CardModel> = {};\n  public loading: boolean = false;\n  constructor(private route: ActivatedRoute, private httpService: HttpService) {}\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      const id = params.id;\n      this.loading = true;\n      this.httpService.getCards({id})\n        .subscribe((response: CardsModel) => {\n          const [card] = response.cards;\n          this.card = card;\n          this.loading = false;\n        });\n  });\n  }\n}\n","<a routerLink=\"/cards\" class=\"btn-go-back\">\n  <img width=\"60\" src=\"assets/images/go-back.png\" alt=\"\" />\n</a>\n<h1 class=\"title\">Pokemon</h1>\n<app-activity-indicator *ngIf=\"loading\"></app-activity-indicator>\n<div class=\"container\">\n  <div class=\"item\">\n    <img width=\"100%\" [src]=\"card.imageUrlHiRes\" />\n  </div>\n  <div class=\"item\">\n    <table>\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Type(s)</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td class=\"nowrap\">{{ card.id }}</td>\n          <td>{{ card.name }}</td>\n          <td>{{ card.types }}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    <table>\n      <thead>\n        <tr>\n          <th>Resistances</th>\n          <th>Weaknesses</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{{ card.hp }}</td>\n          <td>\n            <span *ngFor=\"let weaknesses of card.weaknesses\"\n              >Type: {{ weaknesses.type }} Value: {{ weaknesses.value }}</span\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    \n    <table>\n      <thead>\n        <tr>\n          <th>Attack</th>\n          <th>Mana cost</th>\n          <th>Damage</th>\n          <th>description</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let attack of card.attacks\">\n          <td>{{ attack.name }}</td>\n          <td>{{ attack.convertedEnergyCost }}</td>\n          <td>{{ attack.damage }}</td>\n          <td>{{ attack.text }}</td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortBy',\n})\nexport class SortByPipe implements PipeTransform {\n  transform(array: [], key: string): [] {\n    return array.sort(function (a, b) {\n      if (a[key] > b[key]) {\n        return 1;\n      }\n      if (a[key] < b[key]) {\n        return -1;\n      }\n      return 0;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>not-found works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CardComponent } from './pages/card/card.component';\nimport { CardsComponent } from './pages/cards/cards.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\n\nconst routes: Routes = [\n  { path: 'cards', component: CardsComponent },\n  { path: 'card/:id', component: CardComponent },\n  { path: '', redirectTo: '/cards', pathMatch: 'full'},\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}